// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NTTDataTest.Domain.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NTTDataTest.Domain.Migrations
{
    [DbContext(typeof(NTTContext))]
    partial class NTTContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NTTDataTest.Domain.Entities.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("price")
                        .HasPrecision(10, 2)
                        .HasColumnType("double precision");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.HasKey("id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("NTTDataTest.Domain.Entities.Product", b =>
                {
                    b.OwnsOne("NTTDataTest.Domain.Entities.Rating", "rating", b1 =>
                        {
                            b1.Property<int>("Productid")
                                .HasColumnType("integer");

                            b1.Property<int>("count")
                                .HasColumnType("integer");

                            b1.Property<double>("rate")
                                .HasPrecision(5, 2)
                                .HasColumnType("double precision");

                            b1.HasKey("Productid");

                            b1.ToTable("Products");

                            b1.WithOwner()
                                .HasForeignKey("Productid");
                        });

                    b.Navigation("rating")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
